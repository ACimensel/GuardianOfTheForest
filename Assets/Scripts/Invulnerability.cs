using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class Invulnerability : MonoBehaviour
{
    [SerializeField] float flashTime = 0.2f;
    [SerializeField] float invulnerabilityTime = 3f;
	private Renderer renderer;
	private Color startColor;
    private Animator animator;
	private Rigidbody2D m_Rigidbody2D;

    // Start is called before the first frame update
    void Start(){
		m_Rigidbody2D = GetComponent<Rigidbody2D>();
		renderer = GetComponent<Renderer>();
		startColor = renderer.material.color;
        animator = GetComponent<Animator>();
    }

    // Update is called once per frame
    void OnTriggerEnter2D (Collider2D col){
        Debug.Log("DAMAGED");
		if (LayerMask.LayerToName(col.gameObject.layer) == "Damage"){
            if(col.gameObject.transform.position.x < this.gameObject.transform.position.x) 
                m_Rigidbody2D.AddForce(new Vector2(300f, 50f));
            else 
                m_Rigidbody2D.AddForce(new Vector2(-300f, 50f));
                
			StartCoroutine ("BecomeInvulnerable");
        }
    }

	IEnumerator BecomeInvulnerable(){
		animator.SetTrigger("isHurt");
		Physics2D.IgnoreLayerCollision (6, 7, true);
		Coroutine flash = StartCoroutine ("Flash");

		yield return new WaitForSeconds (invulnerabilityTime);

        StopCoroutine(flash);
		Physics2D.IgnoreLayerCollision (6, 7, false);
		startColor.a = 1f;
		renderer.material.color = startColor;
	}

    IEnumerator Flash(){
        startColor.a = 0.6f;
        float delta = 0.2f;

        while(true){
            delta *= -1;
            startColor.a += delta;
            renderer.material.color = startColor;
            yield return new WaitForSeconds(flashTime);
        }
	}
}
